## Name of Files
#NFILES = Alina Artur Kolya Danil
#
## First files prefix
#FFILES = $(addprefix First_, $(NFILES))
#
## Secnd files prefix
#SFILES = $(patsubst First_%,Secnd_%, $(FFILES))
#
## COUNT OF ALL FILES
#CFILES = $(words $(NFILES) $(FFILES) $(SFILES))
#
#CPROG  = 0
#
#all: start end
#	set -x
#	@echo -e "Count = $(CFILES)"
#	@echo -e "Names = $(NFILES)"
#	@echo -e "First = $(FFILES)"
#	@echo -e "Secnd = $(SFILES)"
#
#all2:
#
#$(NFILES):
#	touch $@
#
#$(FFILES): $(NFILES)
#	cp $< $@
#
#$(SFILES): $(FFILES)
#	cp $< $@
#
#start:
#	@echo start
#	export BLA=5
#	env | grep BLA
#
#end:
#	@echo end
#
#clean:
#	@rm -rf $(NFILES) $(FFILES) $(SFILES)

# BUILD is initially undefined
ifndef BUILD

# max equals 256 x's
sixteen := x x x x x x x x x x x x x x x x
MAX := $(foreach x,$(sixteen),$(sixteen))

# T estimates how many targets we are building by replacing BUILD with a special string
T := $(shell $(MAKE) -nrRf $(firstword $(MAKEFILE_LIST)) $(MAKECMDGOALS) \
            BUILD="COUNTTHIS" | grep -c "COUNTTHIS")

# N is the number of pending targets in base 1, well in fact, base x :-)
N := $(wordlist 1,$T,$(MAX))

# auto-decrementing counter that returns the number of pending targets in base 10
counter = $(words $N)$(eval N := $(wordlist 2,$(words $N),$N))

# BUILD is now defined to show the progress, this also avoids redefining T in loop
BUILD = @echo $(counter) of $(T)
endif

# dummy phony targets

.PHONY: all clean

all: target
	@echo "done"


clean:
	@rm -f target *.c

# dummy build rules

target: a.c b.c c.c d.c e.c f.c g.c
	@touch $@
	$(BUILD)

%.c:
	@touch $@
	$(BUILD)
